[metadata]
name = pre_commit_hooks_changelog
version = 0.1.1
description = generate Changelog.md from yaml files in changelog folder
long_description = file: README.md
long_description_content_type = text/markdown
url = https://https://github.com/chrysa/pre-commit-hooks-changelog
author = Anthony Greau
author_email = greau.anthony@gmail.com
classifiers =
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: Implementation :: PyPy

[options]
packages = find:
install_requires =
    ruamel.yaml>=0.16.5
tests_require =
    -e .
    coverage
    mock
    pytest
    pytest-env
    tox
python_requires = >=3.7

[options.entry_points]
console_scripts =
    pre-commit-generate-changelog = generate_changelog:main

[options.package_data]
generate_changelog.resources =
    *.tar.gz
    empty_template_*
    hook-tmpl

[options.packages.find]
exclude =
    tests*
    testing*

[bdist_wheel]
universal = True

[coverage:run]
branch = True
data_file = /src/.pytest_cache/.coverage
cover_pylib = True

[coverage:[paths]
source = alexa/rfi, alexa/tests

[coverage:report]
exclude_lines = prgama: no cover, def __repr__, if __name__ == __main__:
fail_under = 85
precision = 2
show_missing = True

[coverage:[html]
directory = coverage_html

[flake8]
include = alexa/rfi
exclude = .git,__pycache__,alex-old
banned-modules = unittest.mock! = use mock., six.moves.urllib.parse! = use urlparse, {python2to3}
ban-relative-imports = true
# Print the total number of errors.
count = True
# Print the source code generating the error/warning in question.
show-source = False
# Count the number of occurrences of each error/warning code and print a report.
statistics = True
# Redirect all output to the specified file.
output-file = .flake8.log
# Also print output to stdout if output-file has been configured.
tee = True
# Provide a comma-separated list of glob patterns to exclude from checks.
# Provide a comma-separate list of glob patterns to include for checks.
filename = *.py
# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 120
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 10
# Toggle whether pycodestyle should enforce matching the indentation of the opening bracketâ€™s line.
# incluences E131 and E133
hang-closing = False
# Specify a list of codes to ignore.
ignore =  E203, E266, E501, F403, F405, F811, W503, W504, W601, E231
# Specify the list of error codes you wish Flake8 to report.
select = E, W, F, C

[tool:pytest]
cachedir: $PYTHON_PREFIX/.pytest_cache
rootdir: $REGENDOC_TMPDIR
addopts =  --strict --verbose --color=yes --showlocals --basetemp=. --cov-config=.coveragerc --no-cov-on-fail --cov-branch --benchmark-enable --benchmark-autosave
python_files = *_test.py
python_classes = Test*
python_functions = test_*
console_output_style = progress
pythest_plugins = pytest-flask, pytest-coverage, pytest-cov, pytest-benchmark, pytest-flake8, pytest-mockredis
markers = unit
redis_port = 8888
